O desenvolvimento de aplicações distribuídas envolve lidar, em geral, com a troca de mensagens na rede entre os computadores para que os dados relevantes à execução - o estado do sistema - possa ser compartilhado e conhecido por todos. Esta abordagem é complexa e requer o uso de protocolos para gerenciar e manter consistente entre todas as máquinas o estado compartilhado entre o sistema.

Uma forma comum de compartilhar o estado entre os componentes do sistema é utilizar algum tipo de armazenamento de dados como ponto de integração como, por exemplo, bancos de dados relacionais. A abordagem que utiliza um banco de dados relacional é interessante devido ao alto grau de controle que estes bancos oferecem, como integridade referencial e a execução de comandos que alteram diversos dados de forma atômica (transações), ou seja, ou todos os comandos são concluídos com êxito ou nenhum comando é executado. Esta utilização consistente dos dados é altamente desejável pois torna o desenvolvimento de aplicações mais simples de ser abordado, sem a necessidade de tratamentos complexos de controle de consistência por parte do desenvolvedor da aplicação. Porém, devido aos mecanismos para controlar a consistência dos dados, os bancos de dados relacionais passam a ser penalizados em relação à quantidade cada vez maior de dados que aplicações como comércio eletrônico ou redes sociais precisam armazenar. Essa grande quantidade de dados passa a exigir que o armazenamento seja particionado entre diferentes máquinas o que, por sua vez, torna o controle de consistência mais complexo. Dessa forma, a maneira usual com que os bancos de dados relacionais podem atender um número crescente de dados é através da melhora no hardware em que eles são executados, conhecida como escala de forma vertical. Enquanto é desejável que o sistema ofereça a consistência dos dados como um banco de dados relacional oferece, também se torna necessário que o sistema possa escalar de forma horizontal, permitindo particionar e armazenar os dados em máquinas distintas. 

Neste trabalho buscamos desenvolver uma infraestrutura que permite aplicações compartilharem estado de forma escalável horizontalmente e fazendo uso de minitransações para garantir a consistência dos dados em operações que envolvem a alteração de dados que estejam em diferentes máquinas. As minitransações são uma extensão do protocolo de transação distribuída de duas fases (Two-Phase Commit Protocol - 2PC) que permite acessar atomicamente ou modificar condicionalmente dados distribuídos em várias máquinas. Uma primitiva de programação é disponibilizada aos desenvolvedores de aplicação permitindo que passem a tratar o compartilhamento de estado entre o sistema como a criação e manipulação de estruturas de dados compartilhadas, excluindo a necessidade de lidar com protocolos e mecanismos de troca de mensagens explicitamente.
